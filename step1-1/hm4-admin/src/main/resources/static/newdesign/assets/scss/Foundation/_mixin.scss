@charset "utf-8";
@use "sass:math";
@use "./variables" as *;

// ==========================================================================
//  mixin
// ==========================================================================

// 【メモ】利用有無の確認

// mixin集
// ----------------------------------------------------------

// 01. media query ★
// 01-01. edge（lg / sm）    ★　※【メモ】利用するなら表示させる
// 01-02. firefox（lg / sm） ★　※【メモ】利用するなら表示させる
// 01-03. safari（lg / sm）  ★　※【メモ】利用するなら表示させる
// 02. font-size / line-height / font-weight   ★
// 03. コンテンツ幅   ★
// 04. letter-spacingをトラッキングの数値から計算  ★
// 05__ホバーで透過   ★





// 01. 画像置換
// 02. テキスト省略
// 05. gradation
// 07. くの字矢印
// 08. 三角
// 09. 疑似要素初期化
// 11. object-fit ie用Polyfill
// 17. tablet (portrait / landscape)
// 18. ipados (portrait / landscape)
// 19. first, notfirst
// 20. last, notlast
// 21. expand
// 22. expansion
// 24. picture100
// 25. triangle
// 26. circle
// 27. square
// 28. rightTriangle
// 29. isoscelesTriangle
// 30. 100vh
// 31. orientation
// 32. ホバーで暗く
// 33. 均等割り付け
// ----------------------------------------------------------


// 01. media query
// -----------------------------------------------------------------

@mixin media($size) {

  // sm only
  @if ($size == "sm") {
    @media screen and (max-width: map-get($breakPoint, sm)) {
      @content;
    }
  }

  // se only
  @else if ($size == "se") {
    @media screen and (max-width: map-get($breakPoint, se)) {
      @content;
    }
  }

  // between lg and $mainW
  @else if ($size == "mid") {
    @media screen and (min-width: map-get($breakPoint, lg)) and (max-width: ($mainW + px)), print {
      @content;
    }
  }

  // lg only
  @else if ($size == "lg") {
    @media screen and (min-width: map-get($breakPoint, lg)), print {
      @content;
    }
  }

  // hlg only
  @else if ($size == "hlg") {
    @media screen and (min-width: map-get($breakPoint, hlg)), print {
      @content;
    }
  }

  // retina only
  @else if ($size == "retina") {
    @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 2dppx) {
      @content;
    }
  }
}

// 01-01. edge (lg / sm) ※【メモ】利用するなら表示させる
// -----------------------------------------------------------------

@mixin edge($size: false, $engine: "edgehtml") {
  // html[data-browser="edge"][data-browserengine="#{$engine}"] & {
  //   @if ($size) {
  //     @if ($size == "lg") {
  //       @media screen and (min-width: map-get($breakPoint, lg)) {
  //         @content;
  //       }
  //     }

  //     @else if ($size == "sm") {
  //       @media screen and (max-width: map-get($breakPoint, sm)) {
  //         @content;
  //       }
  //     }
  //   }

  //   @else {
  //     @content;
  //   }
  // }
}

// 01-02. firefox (lg / sm)  ※【メモ】利用するなら表示させる
// -----------------------------------------------------------------

@mixin firefox($size: false) {

  // html[data-browser = "firefox"] & {
  //   @if ($size) {
  //     @if ($size == "lg") {
  //       @media screen and (min-width: map-get($breakPoint, lg)) {
  //         @content;
  //       }
  //     }

  //     @else if ($size == "sm") {
  //       @media screen and (max-width: map-get($breakPoint, sm)) {
  //         @content;
  //       }
  //     }
  //   }

  //   @else {
  //     @content;
  //   }
  // }
}

// 01-03. safari (lg / sm) 　※【メモ】利用するなら表示させる
// -----------------------------------------------------------------

@mixin safari($size: false) {
  // @if ($size == "sm") {

  //   html[data-browser = "mobile-safari"] & {
  //     @content;
  //   }
  // }

  // @else {

  //   html[data-browser = "safari"] & {
  //     @content;
  //   }
  // }
}


// 02. font-size / line-height / font-weight
// -----------------------------------------------------------------

// for lg
@mixin font-style($size, $height: false, $weight: false) {
  font-size: #{math.div($size, 10)}rem;

  @if $height {
    line-height: math.div($height, $size);
  }

  @if $weight {
    font-weight: $weight;
  }
}

// for sm min
@mixin font-sp-style($size, $height: false, $weight: false, $baseWidth: $smBasis) {
  font-size: min( 
    #{math.div($size, $baseWidth) * 100vw},
    #{math.div(($size + 3),10)}rem
  );

  @if $height {
    line-height: math.div($height, $size);
  }

  @if $weight {
    font-weight: $weight;
  }
  
}

// for sm clamp
@mixin font-sp-style-clamp($size, $height: false, $weight: false, $baseWidth: $smBasis) {
  font-size: clamp( 
    #{math.div(($size - 2),10)}rem,
    #{math.div($size, $baseWidth) * 100vw},
    #{math.div(($size + 2),10)}rem
  );

  @if $height {
    line-height: math.div($height, $size);
  }

  @if $weight {
    font-weight: $weight;
  }
  
}

// for sm clampのみ
@mixin font-clamp($size, $baseWidth: $smBasis) {
  font-size: clamp( 
    #{math.div(($size - 2),10)}rem,
    #{math.div($size, $baseWidth) * 100vw},
    #{math.div(($size + 2),10)}rem
  );
}


// for sm vwのみ
@mixin font-vw($size, $baseWidth: $smBasis) {
  font-size: math.div($size, $baseWidth) * 100vw;
}


// 03. コンテンツ幅
// -----------------------------------------------------------------

@mixin width($width: 1000px, $marginLg: 0, $marginSm: 0) {
  margin-inline: auto;
  max-width: $width;

  @if $marginLg {
    width: calc(100% - #{$marginLg} * 2);
  }
  @else {
    width: auto;
  }

  @include media(sm) {
    @if $marginSm {
      width: calc(100% - #{$marginSm} * 2);
    }
    @else {
      width: auto;
    }
  }
}

// 04__letter-spacingをトラッキングの数値から計算
// ----------------------------------------------------------

@mixin letterSpacing($tracking) {
  letter-spacing: #{math.div($tracking, 1000)}em;
}

// 05__ホバーで透過
// ----------------------------------------------------------

@mixin hoverOpacity($opacity, $ms: false, $ease: false) {
  @include media(lg) {
    @if $ease {
      transition: opacity $ms $ease;
    }

    @else {
      transition: opacity $comMS $comES;
    }

    &:hover {
      opacity: $opacity;
    }
  }
}























// 01__画像置換
// ----------------------------------------------------------

@mixin hideText() {
  color: transparent;
  font: 0/0;
  overflow: hidden;
  text-shadow: none;
}





// 02__テキスト省略
// ----------------------------------------------------------

@mixin ellipsis($is-clamp: false) {
  @if ( $is-clamp ) {
    -webkit-box-orient: vertical;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    overflow: hidden;
    word-break: break-all;
  }

  @else {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
}

@mixin notEllipsis() {
  overflow: inherit;
  text-overflow: inherit;
  white-space: inherit;
}





// 05__gradation
// ----------------------------------------------------------

@mixin gradation($topColor, $bottomColor, $angle: to bottom) {
  background: mix($topColor, $bottomColor, 50%); //開始色と終了色の中間の色を背景色に指定
  background: linear-gradient($angle, $topColor, $bottomColor);
}



// 07__くの字矢印
// ----------------------------------------------------------

@mixin arrow($width, $bold, $color, $deg) {
  @include icon-ini;

  border-color: $color;
  border-style: solid;
  border-width: 0 #{$bold}px #{$bold}px 0;
  height: #{$width}px;
  vertical-align: middle;
  width: #{$width}px;
  //角度
  @if ($deg == "left") {
    transform: rotate(135deg);
  }

  @else if ($deg == "top") {
    transform: rotate(225deg);
  }

  @else if ($deg == "right") {
    transform: rotate(-45deg);
  }

  @else if ($deg == "bottom") {
    transform: rotate(45deg);
  }

  // @include ie11() {
  //   margin-bottom: 1px !important;
  // }
}

// 08__三角
// ----------------------------------------------------------

@mixin balloonArrow(
  $width: 10px,
  $height: 5px,
  $color: #000,
  $position: bottom
) {
  position: relative;

  @if ($position == "top") {

    &:after {
      border-color: transparent transparent $color transparent;
      border-width: 0 #{$width/2}px #{$height}px #{$width/2}px;
      left: calc(50% - #{$width/2}px);
      top: -#{$height}px;
    }
  }

  @else if ($position == "right") {

    &:after {
      border-color: transparent transparent transparent $color;
      border-width: #{$width/2}px 0 #{$width/2}px #{$height}px;
      right: -#{$height}px;
      top: calc(50% - #{$width/2}px);
    }
  }

  @else if ($position == "bottom") {

    &:after {
      border-color: $color transparent transparent transparent;
      border-width: #{$height}px #{$width/2}px 0 #{$width/2}px;
      bottom: -#{$height}px;
      left: calc(50% - #{$width/2}px);
    }
  }

  @else if ($position == "left") {

    &:after {
      border-color: transparent $color transparent transparent;
      border-width: #{$width/2}px #{$height}px #{$width/2}px 0;
      left: -#{$height}px;
      top: calc(50% - #{$width/2}px);
    }
  }

  &:after {
    border-style: solid;
    content: "";
    display: inline-block;
    height: 0;
    position: absolute;
    width: 0;
  }
}

// 09__疑似要素初期化
// ----------------------------------------------------------

@mixin icon-ini {
  content: "";
  display: inline-block;
}



// 11__object-fit ie用Polyfill
// ----------------------------------------------------------

@mixin object-fit($fit: fill, $position: null) {
  -o-object-fit: $fit;
  object-fit: $fit;

  @if $position {
    -o-object-position: $position;
    object-position: $position;
    /* stylelint-disable-next-line */
    font-family: "object-fit: #{$fit}; object-position: #{$position}";
  }

  @else {
    font-family: "object-fit: #{$fit}";
  }
}









// 17__tablet (portrait / landscape)
// ----------------------------------------------------------

@mixin tablet($orientation: false) {
  @if ($orientation) {
    html[data-type="tablet"][data-orientation="#{$orientation}"] & {
      @content;
    }
  }

  @else {

    html[data-type = "tablet"] & {
      @content;
    }
  }
}

// 18__ipados (portrait / landscape) ラップトップだけどタッチサポートしているデバイス全般
// ----------------------------------------------------------

@mixin ipados($orientation: false) {
  @if ($orientation) {
    html[data-type="laptop"][data-os="mac-os"][data-browser="safari"][data-touchsupport="true"][data-orientation="#{$orientation}"]
    & {
      @content;
    }
  }

  @else {

    html[data-type = "laptop"][data-os = "mac-os"][data-browser = "safari"][data-touchsupport = "true"] & {
      @content;
    }
  }
}

// 19__first, notfirst
// ----------------------------------------------------------

@mixin first {

  &:first-of-type {
    @content;
  }
}

@mixin notfirst($child: false) {
  @if ($child) {

    &:not(:first-child) {
      @content;
    }
  }

  @else {

    &:not(:first-of-type) {
      @content;
    }
  }
}

// 20__last, notlast
// ----------------------------------------------------------

@mixin last {

  &:last-of-type {
    @content;
  }
}

@mixin notlast {

  &:not(:last-of-type) {
    @content;
  }
}

// 21__expand
// ----------------------------------------------------------

@mixin expand($top, $right, $bottom, $left) {
  margin: #{$top}px #{$right}px #{$bottom}px #{$left}px;
}

// 22__expansion
// ----------------------------------------------------------

@mixin expansion($verticale, $horizontal, $scale) {
  transform: scale($scale);
  transform-origin: $verticale $horizontal;
}

// 24__picture100
// ----------------------------------------------------------

@mixin picture100 {

  picture,
  source,
  img {
    @include object-fit(cover);

    height: 100%;
    width: 100%;
  }
}

// 25__triangle
// ----------------------------------------------------------

@mixin triangle($width, $height, $color, $rotate) {
  border-style: solid;
  content: "";
  height: 0;
  position: absolute;
  width: 0;

  @if ($rotate == "top") {
    border-color: transparent transparent $color transparent;
    border-width: 0 #{$width/2}px #{$height}px #{$width/2}px;
  }

  @else if ($rotate == "right") {
    border-color: transparent transparent transparent $color;
    border-width: #{$width/2}px 0 #{$width/2}px #{$height}px;
  }

  @else if ($rotate == "bottom") {
    border-color: $color transparent transparent transparent;
    border-width: #{$height}px #{$width/2}px 0 #{$width/2}px;
  }

  @else if ($rotate == "left") {
    border-color: transparent $color transparent transparent;
    border-width: #{$width/2}px #{$height}px #{$width/2}px 0;
  }
}

// 26__circle
// ----------------------------------------------------------

@mixin circle($width, $height, $color) {
  background-color: #{$color};
  border-radius: 50%;
  content: "";
  height: #{$height}px;
  position: absolute;
  width: #{$width}px;
}

// 27__square
// ----------------------------------------------------------

@mixin square($width, $height, $color) {
  background-color: #{$color};
  content: "";
  height: #{$height}px;
  position: absolute;
  width: #{$width}px;
}

// 28__rightTriangle
// ----------------------------------------------------------

@mixin rightTriangle($width, $color, $rotate) {
  border-style: solid;
  content: "";
  height: 0;
  position: absolute;
  width: 0;

  @if ($rotate == 1) {
    border-color: $color transparent transparent transparent;
    border-width: #{$width}px #{$width}px 0 0;
  }

  @else if ($rotate == 2) {
    border-color: transparent $color transparent transparent;
    border-width: 0 #{$width}px 0 #{$width}px 0;
  }

  @else if ($rotate == 3) {
    border-color: transparent transparent $color transparent;
    border-width: 0 0 #{$width}px #{$width}px;
  }

  @else if ($rotate == 4) {
    border-color: transparent transparent transparent $color;
    border-width: #{$width}px 0 0 #{$width}px;
  }
}

// 29__isoscelesTriangle
// ----------------------------------------------------------

@mixin isoscelesTriangle($width, $height, $color, $rotate) {
  border-style: solid;
  content: "";
  height: 0;
  position: absolute;
  width: 0;

  @if ($rotate == 1) {
    border-color: $color transparent transparent transparent;
    border-width: #{$width}px #{$width}px 0 0;
  }

  @else if ($rotate == 2) {
    border-color: transparent $color transparent transparent;
    border-width: 0 #{$width}px 0 #{$width}px 0;
  }

  @else if ($rotate == 3) {
    border-color: transparent transparent $color transparent;
    border-width: 0 0 #{$width}px #{$width}px;
  }

  @else if ($rotate == 4) {
    border-color: transparent transparent transparent $color;
    border-width: #{$height}px 0 0 #{$width}px;
  }
}

// 30__100vh
// ----------------------------------------------------------

@mixin vh100($name, $target: height) {
  #{$target}: 100vh;
  #{$target}: calc(var(#{$name}, 1vh) * 100);
}

// 31__orientation
// ----------------------------------------------------------

@mixin orientation($orientation: landscape, $type: mobile) {
  html[data-type="#{$type}"][data-orientation="#{$orientation}"] & {
    @content;
  }
}

// 32__ホバーで暗く
// ----------------------------------------------------------
@mixin hoverDark($target: false, $pos: after) {
  @include media(lg) {
    @if ($target) {

      &:hover {
        opacity: 1;

        #{$target} {

          &:#{$pos} {
            background-color: rgba(#000, .6);
          }
        }
      }

      #{$target} {
        position: relative;

        &:#{$pos} {
          @include icon-ini;

          height: 100%;
          left: 0;
          position: absolute;
          top: 0;
          transition: $comMS $comES;
          width: 100%;
        }
      }
    }

    @else {
      position: relative;

      &:hover {
        opacity: 1;

        &:#{$pos} {
          background-color: rgba(#000, .6);
        }
      }

      &:#{$pos} {
        @include icon-ini;

        height: 100%;
        left: 0;
        position: absolute;
        top: 0;
        transition: $comMS $comES;
        width: 100%;
      }
    }
  }
}

// 33__均等割り付け
// ----------------------------------------------------------
@mixin textJustify() {
  text-align: justify;
  text-justify: inter-ideograph;

  // @include ie11 {
  //   text-align: inherit;
  //   text-justify: auto;
  // }
}

// 34__macos iPadOS safariも含まれます
// ----------------------------------------------------------

@mixin macos {

  html[data-os = "mac-os"] & {

    @content;
  }
}

// 35__ios
// ----------------------------------------------------------

@mixin ios {

  html[data-os = "ios"] & {

    @content;
  }
}

// 36__not macos and ios
// ----------------------------------------------------------

@mixin notMacosIos {

  html:not([data-os = "mac-os"]):not([data-os = "ios"]) & {
    @content;
  }
}

// 37__android
// ----------------------------------------------------------

@mixin android {

  html[data-os = "android"] & {

    @content;
  }
}


// // 40_vw変換 【メモ】移動させたので後撤去
// // ----------------------------------------------------------

// @function vwset($num, $baseWidth: $smBasis) {
//   @return (math.div($num, $baseWidth) * 100vw);
// }



