#
# core　本番環境依存値設定ファイル
#

# 通知メール受信者一覧
# 受信者を複数設定する場合はカンマで区切ってください。
# 設定例 "XXXXX@itec.hankyu-hanshin.co.jp","XXXXX@itec.hankyu-hanshin.co.jp"
noticemail.receivers=pdr-sys@itec.hankyu-hanshin.co.jp
# 接続先URL env-migrate:pr.connect.url,env-migrate:pr.secure.connect.url
connect.url=http://shop.pdr.co.jp
secure.connect.url=https://shop.pdr.co.jp
# env-migrate:pr.order.code.prefix
order.code.prefix=
# サイトマップトップディレクトリURL
sitemapxmloutput.topdir.url=https://shop.pdr.co.jp/sitemap/

# WEB-API接続用URL TODO プロパティ改善
#現行WEB-API接続先
#webapi.url=http://10.253.4.3:8080
#新規WEB-API接続先（ポート設定、本番用：指定なし（または80）、検証用：8001、開発用：8002）
#webapi.url=http://10.253.10.179
# WEB-API接続環境
# 本番：pdr-web-api
# ステージング：pdr-web-api-st
#webapi.environment=API
# WEB-API接続用拡張子
#webapi.extension=.aspx

# WEB-API 文字コード env-migrate:pr.webapi.charset
webapi.charset=UTF-8
# WEB-API 接続タイムアウト時間(ミリ秒) env-migrate:pr.webapi.connect.timeout
webapi.connect.timeout=90000
# WEB-API 読み取りタイムアウト時間(ミリ秒)
# 2018/04/03 10万超の会員情報連携にてタイムアウトエラー発生に付き、時間を伸ばした
# webapi.read.timeout=90000
# env-migrate:pr.webapi.read.timeout
webapi.read.timeout=600000
# WEB-API リクエスト、レスポンスデータログ出力有無[0:出力しない/1:出力する] env-migrate:pr.webapi.log.output.flg
webapi.log.output.flg=0
# WEB-API アラートメール送信有無[0:送信しない/1:送信する] env-migrate:pr.webapi.mail.send.flg
webapi.mail.send.flg=1
#ログイン前閲覧不可商品区分値
#カンマ区切りで複数指定可 env-migrate:pr.goods.not.view.type
goods.not.view.type=21,11,12,13
# 未登録会員照会発生メール 送信有無[0:送信しない/1:送信する] env-migrate:pr.admin.send.mail.flg
admin.send.mail.flg=1

#WEB-API 接続URL
# 会員系
# 会員情報登録 env-migrate:pr.webapi.url,pr.webapi.environment,pr.webapi.extension
webapi.url.member.adduserinformation=http://10.253.10.179/API/member/AddUserInformation.aspx
# 会員変更情報取得 env-migrate:pr.webapi.url,pr.webapi.environment,pr.webapi.extension
webapi.url.member.getuserinformation=http://10.253.10.179/API/member/GetUserInformation.aspx
# 会員情報更新 env-migrate:pr.webapi.url,pr.webapi.environment,pr.webapi.extension
webapi.url.member.repusermailaddress=http://10.253.10.179/API/member/RepUserMailaddress.aspx
# 会員お知らせ情報更新 env-migrate:pr.webapi.url,pr.webapi.environment,pr.webapi.extension
webapi.url.member.repusernotice=http://10.253.10.179/API/member/RepUserNotice.aspx
#2023-renew No85-1 from here
# 会員FAX情報更新 env-migrate:lo.webapi.url,lo.webapi.environment,lo.webapi.extension
webapi.url.member.repuserfax=http://10.253.10.179/API/member/RepUserFax.aspx
#2023-renew No85-1 to here
# お届け先参照 env-migrate:pr.webapi.url,pr.webapi.environment,pr.webapi.extension
webapi.url.member.getdestination=http://10.253.10.179/API/member/GetDestination.aspx
# お届け先削除 env-migrate:pr.webapi.url,pr.webapi.environment,pr.webapi.extension
webapi.url.member.deldestination=http://10.253.10.179/API/member/DelDestination.aspx
# お届け先登録 env-migrate:pr.webapi.url,pr.webapi.environment,pr.webapi.extension
webapi.url.member.adddestination=http://10.253.10.179/API/member/AddDestination.aspx

# 商品系
# 商品在庫数取得 env-migrate:pr.webapi.url,pr.webapi.environment,pr.webapi.extension
webapi.url.goods.getstock=http://10.253.10.179/API/goods/GetStock.aspx
# 取りおき情報取得 env-migrate:pr.webapi.url,pr.webapi.environment,pr.webapi.extension
webapi.url.goods.getreserve=http://10.253.10.179/API/goods/GetReserve.aspx
# 数量割引情報取得 env-migrate:pr.webapi.url,pr.webapi.environment,pr.webapi.extension
webapi.url.goods.getquantitydiscount=http://10.253.10.179/API/goods/GetQuantityDiscount.aspx
# 価格情報取得 env-migrate:pr.webapi.url,pr.webapi.environment,pr.webapi.extension
webapi.url.goods.getprice=http://10.253.10.179/API/goods/GetPrice.aspx
# シリーズ商品価格情報取得 env-migrate:pr.webapi.url,pr.webapi.environment,pr.webapi.extension
webapi.url.goods.getseriesprice=http://10.253.10.179/API/goods/GetSeriesPrice.aspx
# 2023-renew No11 from here
# 販売可否判定情報取得 env-migrate:lo.webapi.url,lo.webapi.environment,lo.webapi.extension
webapi.url.goods.getsalecheck=http://10.253.10.179/API/goods/GetSaleCheck.aspx
# 2023-renew No11 to here
# 2023-renew No92 from here
# 後継品代替品情報取得 env-migrate:lo.webapi.url,lo.webapi.environment,lo.webapi.extension
webapi.url.goods.getothergoods=http://10.253.10.179/API/goods/GetOtherGoods.aspx
# 2023-renew No92 to here
# 商品入荷情報取得 env-migrate:pr.webapi.url,pr.webapi.environment,pr.webapi.extension
webapi.url.goods.getrestock=http://10.253.10.179/API/goods/GetReStock.aspx
# 商品セール情報取得 env-migrate:pr.webapi.url,pr.webapi.environment,pr.webapi.extension
webapi.url.goods.getsale=http://10.253.10.179/API/goods/GetSale.aspx

# 注文系
# 割引適用結果取得 env-migrate:pr.webapi.url,pr.webapi.environment,pr.webapi.extension
webapi.url.order.getdiscountsresult=http://10.253.10.179/API/order/GetDiscountsResult.aspx
# 受注連携 env-migrate:pr.webapi.url,pr.webapi.environment,pr.webapi.extension
webapi.url.order.addorderinformation=http://10.253.10.179/API/order/AddOrderInformation.aspx
# プロモーション env-migrate:pr.webapi.url,pr.webapi.environment,pr.webapi.extension
webapi.url.order.getpromotioninformation=http://10.253.10.179/API/order/GetPromotionInformation.aspx
# 配送情報取得 env-migrate:pr.webapi.url,pr.webapi.environment,pr.webapi.extension
webapi.url.order.getdeliveryinformation=http://10.253.10.179/API/order/GetDeliveryInformation.aspx
# 出荷情報取得 env-migrate:pr.webapi.url,pr.webapi.environment,pr.webapi.extension
webapi.url.order.getshipmentinformation=http://10.253.10.179/API/order/GetShipmentInformation.aspx
# 注文保留チェック env-migrate:pr.webapi.url,pr.webapi.environment,pr.webapi.extension
webapi.url.order.orderpendingcheck=http://10.253.10.179/API/order/OrderPendingCheck.aspx
# 注文履歴（未配送）取得 env-migrate:pr.webapi.url,pr.webapi.environment,pr.webapi.extension
webapi.url.order.getnotyetshippingorderhistory=http://10.253.10.179/API/order/GetNotYetShippingOrderHistory.aspx
# 注文履歴（配送済み）取得 env-migrate:pr.webapi.url,pr.webapi.environment,pr.webapi.extension
webapi.url.order.getpreshipmentorderhistory=http://10.253.10.179/API/order/GetPreShipmentOrderHistory.aspx
# 注文履歴（過去1年）取得 env-migrate:pr.webapi.url,pr.webapi.environment,pr.webapi.extension
webapi.url.order.getpreshipmentorderhistoryaggregate=http://10.253.10.179/API/order/GetPreShipmentOrderHistoryAggregate.aspx
# 購入済み商品情報取得 env-migrate:pr.webapi.url,pr.webapi.environment,pr.webapi.extension
webapi.url.order.getpurchasedcommodityinformation=http://10.253.10.179/API/order/GetPurchasedCommodityInformation.aspx
# 消費税率取得 env-migrate:pr.webapi.url,pr.webapi.environment,pr.webapi.extension
webapi.url.order.getconsumptiontaxrate=http://10.253.10.179/API/order/GetConsumptionTaxRate.aspx
# 数量割引適用結果取得 env-migrate:pr.webapi.url,pr.webapi.environment,pr.webapi.extension
webapi.url.order.getquantitydiscountresult=http://10.253.10.179/API/order/GetQuantityDiscountsResult.aspx

# 受注詳細情報取得 env-migrate:pr.webapi.url,pr.webapi.environment,pr.webapi.extension
webapi.url.credit.getorderdetailinformation=http://10.253.10.179/API/credit/GetOrderDetailInformation.aspx
# オーソリ結果連携 env-migrate:pr.webapi.url,pr.webapi.environment,pr.webapi.extension
webapi.url.credit.creditresult=http://10.253.10.179/API/credit/CreditResult.aspx
# クーポン有効性チェック env-migrate:pr.webapi.url,pr.webapi.environment,pr.webapi.extension
webapi.url.order.couponcheck=http://10.253.10.179/API/order/CouponCheck.aspx

# 2023-renew No14 from here
# 前回支払方法取得
webapi.url.order.getbeforepayment=http://10.253.10.179/API/order/GetBeforePayment.aspx
# 出荷予定日取得
webapi.url.order.getshipmentdate=http://10.253.10.179/API/order/GetShipmentDate.aspx
# 2023-renew No14 to here

# 2023-renew No24 from here
# クーポン取得
webapi.url.order.addcoupon=http://10.253.10.179/API/order/AddCoupon.aspx
# 利用可能クーポン一覧取得
webapi.url.order.getcouponlist=http://10.253.10.179/API/order/GetCouponList.aspx
# 2023-renew No24 to here

# 2023-renew No68 from here
# 注文キャンセル
webapi.url.order.cancelorder=http://10.253.10.179/API/order/CancelOrder.aspx
# 2023-renew No68 to here

# 2023-renew No36-1, No61,67,95 from here
## UK-API 接続URL
# 関連ワード
ukapi.url.rword=https://s3bizprd.ukw.jp/rword/v1/pdr/
# ユニサーチ（商品）
ukapi.url.unisearch.goods=https://p1bizprd.ukw.jp/p1/v1/pdr/
# ユニサーチ（コンテンツ）
ukapi.url.unisearch.contents=https://p1bizprd.ukw.jp/p1/v1/pdrcontents/
# 2023-renew No36-1, No61,67,95 to here

## デバッグモード
## エラー画面（error.html）でスタックトレースを表示する／しない（true/false）
## エラーメッセージにエラーコードを含める判定にも利用
debug=false
# 非同期処理対象ファイル出力パス  env-migrate:pr.tmp.dir.path
batch.file.path=/data/hitmall/pdr/admin/tmp

## メール
mail.smtp.host=localhost
# メールに記載するシステム名
alert.mail.system=PDR
# メール送信者アドレス
mail.from.address=info@dev3.hit-mall.jp
# メール件名ショップ名
subject.shop.name=【PDR 公式オンラインショップ】

# 商品画像相対パス(HTML, JSONで表示する場合に利用)
images.path.goods=/g_images
# 商品画像絶対パス(画像を配置する場合に利用) env-migrate:pr.absolute.path.admin.pc
real.images.path.goods=/data/hitmall/pdr/admin/g_images
# 商品画像アップロード先絶対パス(ZIP画像ファイルアップロードの場合に利用) env-migrate:pr.absolute.path.admin.pc
goodsimage.input.directory=/data/hitmall/pdr/admin/g_images_input
# デザイン画像アップロード先絶対パス(ZIP画像ファイルアップロードの場合に利用) env-migrate:pr.absolute.path.admin.pc
goodsimage.d_images.directory=/data/hitmall/pdr/admin/d_images

## 画像URL
# カテゴリ画像相対パス(HTMLで表示する場合に利用)
images.path.category=/d_images/category
# サイドメニューカテゴリ画像相対パス(HTMLで表示する場合に利用)
images.path.lnav_category=/d_images/lnav_category
# サイドメニューカテゴリ画像のファイル名規則
#  命名）　lnav_ + [カテゴリID] + .gif
#  例）　設定値：lnav_ カテゴリID:okaimono
#    lnav_okaimono.gif / lnav_okaimono_o.gif  　
lnav_category.name=lnav_

# 商品画像のリサイズパターン
# パターン①：TOP、商品一覧、商品検索、カート、ご注文確認、ご注文完了、マイリスト、注文履歴詳細の画像
images.path.goods.resize.p1=/resize/p1
# パターン①の高解像度：TOP、商品一覧、商品検索、カート、ご注文確認、ご注文完了、マイリスト、注文履歴詳細の画像（2倍）
images.path.goods.resize.p1x2=/resize/p1x2
# パターン②：商品詳細の大画像
images.path.goods.resize.p2=/resize/p2
# パターン②の高解像度：商品詳細の大画像（2倍）
images.path.goods.resize.p2x2=/resize/p2x2

## SNS 関連
# 詳細は「30_HM3_共通部仕様書_SNS連携.xls」参照
# Facebook アプリケーションID env-migrate:pr.facebook.app.id
facebook.app.id=
# Twitter アカウント名 env-migrate:pr.twitter.via
twitter.via=
# GMOトークン決済JavaScriptのURL
gmo.token.js.src=https://stg.static.mul-pay.jp/ext/js/token.js
# 通信内容のログ出力用Interceptor
# true=セキュリティコードなど特定のパラメータはログ出力時にマスキングする（@see paymentclient.dicon）
paymentclient.log.mask=true
# ショップ名
shop.name=PDR 公式オンラインショップ

## コンテキストパス
contextPathFrontPc=/
contextPathAdminPc=/admin

## 案件毎に修正が必要な設定
# ショップ識別子
shopId=pdr
# 接続先URL
cmp.connect.url=https://shop.pdr.co.jp
cmp.subContext.pc=
cmp.rootContext=
# メール等のメッセージ表示のURL
web.site.url=http://shop.pdr.co.jp/
# SMTPサーバ
alert.mail.smtp=localhost
# メール送信者 env-migrate:pr.mail.from
alert.mail.from=onlineshop@pdr.co.jp
# エラーメール受信者(複数の場合はカンマ区切り) env-migrate:pr.mail.receivers
alert.mail.recipient=pdr-sys@itec.hankyu-hanshin.co.jp,online_alert@pdr.co.jp
# オーソリエラーメール受信者(複数の場合はカンマ区切り)
alert.mail.recipient.authority=hitmall-pkg-process+demo5@itec.hankyu-hanshin.co.jp
# 通知メール受信者(複数の場合はカンマ区切り) env-migrate:pr.noticemail.receivers
alert.noticemail.recipient=pdr-sys@itec.hankyu-hanshin.co.jp

# Paygent Customization from here
## 【ペイジェント】
# ペイジェントの会員IDのプレフィックス文字列
# ペイジェントの会員IDがプレフィックス文字列+会員SEQで生成されるので、
# バッティングしないように各位適当に設定してください
paygent.member.prefix=
# マーチャントID
paygent.merchant.id=28636
# 接続ID
paygent.connect.id=pgynt28636
# 接続パスワード
paygent.connect.password=wftWK5o2BDo
# 電文バージョン番号
paygent.telegram.version=1.0
# 有効性チェックフラグ
paygent.valid.check.flg=1
# コンビニ決済の接続タイプ
paygent.convenience.connection.type=D
# トークン生成鍵の設定
paygent.token.key=live_4fyR5oPyOjCbOuKrJGja0dqT
# PAYGENTトークン決済JavaScriptのURL
paygent.token.js.src=https://token.paygent.co.jp/js/PaygentToken.js
## modenv.propertiesの設定値
# クライアント証明書ファイルパス（他の証明書をインストールしている場合重複しないこと）2022/02/02 証明書更新
paygentB2Bmodule.client_file_path=/data/hitmall/pdr/common/paygent/28636-20191101.pfx
# ペイジェントモジュールURL　（各環境のXX_XX_pdr-hm34-core.tmpl.propertiesから移動 2021/9/2）
paygentB2Bmodule.url=https://module.paygent.co.jp
# プロキシサーバー設定（プロキシサーバーを使用する場合のみ設定）
paygentB2Bmodule.proxy_server_name=
paygentB2Bmodule.proxy_server_ip=
paygentB2Bmodule.proxy_server_port=0
# 接続ID、接続パスワードが設定されない場合に使用されるデフォルト値（空白可）
paygentB2Bmodule.default_id=
paygentB2Bmodule.default_password=
# タイムアウト値（ミリ秒）
paygentB2Bmodule.timeout_value=35000
# ログファイル出力パス
paygentB2Bmodule.log_output_path=/var/log/tomcat/pdr/shop/paygent
# デバッグオプション
# 1:リクエスト/レスポンスをログ出力
# 0:エラー時のみ出力
# ※本番稼動時は必ず0を設定してください
paygentB2Bmodule.debug_flg=0
# 最大照会件数（2000件がペイジェントシステムの最大値なのでそれ以上の値は無効）
paygentB2Bmodule.select_max_cnt=2000
# Paygent Customization to here

# PDR Migrate Customization from here
### 入荷お知らせ完了メール
## InstantMailSettingForMemberInfoUpdatePdr.dicon
# 通知メールを送信する際に使用する SMTP サーバ
mail.setting.restock.sendmail.smtp.server=localhost
# 通知メール送信者
mail.setting.restock.sendmail.mail.from=onlineshop@pdr.co.jp
# 通知メール受信者一覧
# 受信者を複数設定する場合はカンマで区切ってください。(ダブルクォーテーション不要)
# 設定例 XXXXX@itec.hankyu-hanshin.co.jp,XXXXX@itec.hankyu-hanshin.co.jp
mail.setting.restock.sendmail.mail.receivers=pdr-sys@itec.hankyu-hanshin.co.jp,online_alert@pdr.co.jp
